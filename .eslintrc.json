{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "next",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/stylistic",
    "prettier"
  ],
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "ignorePatterns": [
    "**/node_modules",
    "**/lint-staged.config.js",
    "**/mdx.d.ts"
  ],
  "plugins": [
    "react",
    "react-hooks",
    "simple-import-sort",
    "@typescript-eslint",
    "eslint-plugin-tsdoc"
  ],
  "rules": {
    "no-new": 0,
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "semi": 0,
    "@typescript-eslint/semi": "off",
    "@typescript-eslint/promise-function-async": "off",
    "react/react-in-jsx-scope": "off",
    "tsdoc/syntax": "warn",
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    "@typescript-eslint/consistent-type-assertions": "off",
    "@typescript-eslint/comma-dangle": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "space-before-function-paren": "off",
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowAny": true,
        "allowNumber": true,
        "allowNullish": true
      }
    ],
    "@typescript-eslint/space-before-function-paren": "off",
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/consistent-type-imports": [
      "warn",
      {
        "fixStyle": "inline-type-imports"
      }
    ],
    "newline-before-return": "error",
    "no-case-declarations": "off",
    "no-console": "error",
    "no-duplicate-imports": "error",
    "no-extra-boolean-cast": "off",
    "@typescript-eslint/no-duplicate-enum-values": "warn",
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          "src/*",
          "*/**/."
        ],
        "paths": [
          "../",
          "..",
          "./",
          ".",
          "lodash"
        ]
      }
    ],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-undef": "off",
    "no-unreachable": "warn",
    "no-unused-vars": "off",
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "import",
          "export",
          "class",
          "function",
          "block",
          "expression",
          "if",
          "for",
          "do",
          "while",
          "try"
        ],
        "next": [
          "const",
          "let",
          "var",
          "class",
          "if",
          "for",
          "do",
          "while",
          "try"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "import"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "import"
        ],
        "next": [
          "import"
        ]
      }
    ],
    "react/jsx-no-lambda": "off",
    "react/display-name": "off",
    "react/no-render-return-value": "off",
    "react/prop-types": "off",
    "require-atomic-updates": "off",
    "sort-keys": "off",
    "arrow-body-style": [
      "error"
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "@typescript-eslint/no-confusing-void-expression": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "none",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          "field",
          "constructor",
          "method"
        ]
      }
    ],
    "@typescript-eslint/no-array-constructor": "off",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Side effect imports.
          [
            "^\\u0000"
          ],
          // Packages.
          [
            "^[a-z]",
            "^@"
          ],
          // Style imports.
          [
            "^.+\\.svg$",
            "^.+\\.s?css$"
          ],
          // Internal packages.
          [
            "^@mocks",
            "^@theme"
          ],
          // start with @with our convention, start with capital letter, start with dot (relative path), start with src
          [
            "^[A-Z]",
            "^\\.",
            "^src"
          ]
        ]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}